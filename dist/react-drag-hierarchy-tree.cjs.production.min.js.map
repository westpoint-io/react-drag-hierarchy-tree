{"version":3,"file":"react-drag-hierarchy-tree.cjs.production.min.js","sources":["../src/components/RenderChildren/styles.ts","../src/components/RenderChildren/index.tsx","../node_modules/regenerator-runtime/runtime.js","../src/components/RenderBtn/styles.ts","../src/components/RenderBtn/index.tsx","../src/components/RenderCard/styles.ts","../src/context/IndexContextProvider.tsx","../src/context/HierarchyContextProvider.tsx","../src/components/RenderCard/index.tsx","../src/hooks/useDebounce.ts","../src/components/RenderNode/styles.ts","../src/components/RenderNode/index.tsx","../src/components/index.tsx","../src/hooks/useHierarchy.tsx","../src/components/OrgTree/OrgTree.styles.ts","../src/components/OrgTree/OrgTree.tsx","../src/components/RenderTrees.tsx","../src/hooks/useTree.ts"],"sourcesContent":["import { css } from '@emotion/react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { ITreeOptions } from '../interfaces';\r\n\r\nexport const ChildrenComponent = styled.div<ITreeOptions>`\r\n  position: relative;\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style-type: none;\r\n  transition: all 1s ease-in-out;\r\n\r\n  &:before,\r\n  &:after {\r\n    transition: all 0.35s;\r\n  }\r\n\r\n  padding-top: 20px;\r\n  display: table;\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 50%;\r\n    width: 0;\r\n    height: 20px;\r\n    border-right: ${(prop) => (prop.strokeWidth ? prop.strokeWidth : '1px')}\r\n      solid ${(prop) => (prop.strokeColor ? prop.strokeColor : '#000')};\r\n  }\r\n\r\n  &:after {\r\n    content: '';\r\n    display: table;\r\n    clear: both;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.reverse &&\r\n    css`\r\n      display: flex;\r\n      padding-top: 0px;\r\n      padding-bottom: 20px;\r\n\r\n      &:before {\r\n        content: '';\r\n        position: absolute;\r\n        top: unset;\r\n        bottom: 0;\r\n        left: 50%;\r\n        width: 0;\r\n        height: 20px;\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.horizontal &&\r\n    css`\r\n      display: table-cell;\r\n      padding-top: 0;\r\n      padding-left: 20px;\r\n\r\n      &:before {\r\n        top: calc(50% + 1px);\r\n        left: 0;\r\n        width: 20px;\r\n        height: 0;\r\n        border-left: 0;\r\n        border-top: ${props.strokeWidth ? props.strokeWidth : '1px'} solid\r\n          ${props.strokeColor ? props.strokeColor : '#000'};\r\n      }\r\n\r\n      &:after {\r\n        display: none;\r\n      }\r\n\r\n      & > .org-tree-node {\r\n        display: block;\r\n        padding-left: 20px;\r\n      }\r\n    `}\r\n`;\r\n","import React from 'react';\r\n\r\nimport { IRenderChildren } from '../interfaces';\r\nimport { RenderNode } from '../RenderNode';\r\nimport { ChildrenComponent } from './styles';\r\n\r\nexport const RenderChildren = ({\r\n  list,\r\n  data,\r\n  prop,\r\n  mock,\r\n  hierarchyProps,\r\n}: IRenderChildren) => {\r\n  if (Array.isArray(list) && list.length) {\r\n    return (\r\n      <ChildrenComponent\r\n        id={`children_${data.id}`}\r\n        className={'org-tree-node-children'}\r\n        horizontal={!!prop.horizontal}\r\n        reverse={prop.reverse}\r\n        strokeColor={prop.strokeColor}\r\n        strokeWidth={prop.strokeWidth}\r\n      >\r\n        {list.map((item) => {\r\n          return (\r\n            <RenderNode\r\n              mock={mock}\r\n              key={item.id}\r\n              data={item}\r\n              prop={prop}\r\n              hierarchyProps={hierarchyProps}\r\n            />\r\n          );\r\n        })}\r\n      </ChildrenComponent>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import { css } from '@emotion/react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { ITreeOptions } from '../interfaces';\r\ntype IButton = ITreeOptions & {\r\n  buttonBackgroundColor: string;\r\n  buttonBorderColor: string;\r\n};\r\nexport const RenderButton = styled.span<IButton>`\r\n  position: absolute;\r\n  display: inline-block;\r\n  top: 100%;\r\n  left: 50%;\r\n  width: 20px;\r\n  height: 20px;\r\n  z-index: 10;\r\n  margin-left: -11px;\r\n  margin-top: 9px;\r\n  background-color: ${(prop) =>\r\n    prop.buttonBackgroundColor ? prop.buttonBackgroundColor : '#fff'};\r\n  border: 1px solid\r\n    ${(prop) => (prop.buttonBorderColor ? prop.buttonBorderColor : '#ccc')};\r\n  border-radius: 50%;\r\n  box-shadow: 0 0 2px rgba(0, 0, 0, 0.15);\r\n  cursor: pointer;\r\n  transition: all 0.35s ease;\r\n\r\n  :hover {\r\n    filter: brightness(0.9);\r\n    transform: scale(1.1);\r\n  }\r\n\r\n  :before,\r\n  :after {\r\n    content: '';\r\n    position: absolute;\r\n  }\r\n\r\n  :before {\r\n    top: 50%;\r\n    left: 4px;\r\n    right: 4px;\r\n    height: 0;\r\n    border-top: 1px solid\r\n      ${(prop) => (prop.buttonBorderColor ? prop.buttonBorderColor : '#ccc')};\r\n  }\r\n\r\n  :after {\r\n    top: 4px;\r\n    left: 50%;\r\n    bottom: 4px;\r\n    width: 0;\r\n    border-left: 1px solid\r\n      ${(prop) => (prop.buttonBorderColor ? prop.buttonBorderColor : '#ccc')};\r\n  }\r\n\r\n  ${(props) =>\r\n    props.expanded &&\r\n    css`\r\n      &:after {\r\n        border: none;\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.horizontal &&\r\n    css`\r\n      top: 50%;\r\n      left: 100%;\r\n      margin-top: -11px;\r\n      margin-left: 9px;\r\n    `}\r\n`;\r\n\r\nexport const ContainerButton = styled.div<ITreeOptions>`\r\n  position: absolute;\r\n  display: inline-block;\r\n  top: 100%;\r\n  left: 50%;\r\n  width: 20px;\r\n  height: 20px;\r\n  z-index: 10;\r\n  margin-left: -11px;\r\n  margin-top: 9px;\r\n  background-color: #fff;\r\n  border: 1px solid #ccc;\r\n  border-radius: 50%;\r\n  box-shadow: 0 0 2px rgba(0, 0, 0, 0.15);\r\n  cursor: pointer;\r\n  transition: all 0.35s ease;\r\n\r\n  ${(props) =>\r\n    props.horizontal &&\r\n    css`\r\n      top: 50%;\r\n      left: 100%;\r\n      margin-top: -11px;\r\n      margin-left: 9px;\r\n    `}\r\n`;\r\n","import React, { MouseEvent } from 'react';\r\n\r\nimport { IRenderCard } from '../interfaces';\r\nimport { RenderButton, ContainerButton } from './styles';\r\n\r\nexport const RenderBtn = ({\r\n  setExpand,\r\n  expand,\r\n  prop,\r\n}: Omit<IRenderCard, 'hierarchyProps'>) => {\r\n  const { horizontal, renderButton } = prop;\r\n\r\n  if (renderButton)\r\n    return (\r\n      <ContainerButton horizontal={!!horizontal}>\r\n        {renderButton({\r\n          isCollapsed: expand,\r\n          onClick: (event: MouseEvent<any, any>) => {\r\n            event.stopPropagation();\r\n            setExpand(!expand);\r\n          },\r\n        })}\r\n      </ContainerButton>\r\n    );\r\n\r\n  return (\r\n    <RenderButton\r\n      buttonBorderColor={prop.buttonBorderColor || ''}\r\n      buttonBackgroundColor={prop.buttonBackgroundColor || ''}\r\n      horizontal={!!horizontal}\r\n      expanded={expand}\r\n      onClick={(e) => {\r\n        e.stopPropagation();\r\n        setExpand(!expand);\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import { css } from '@emotion/react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { ITreeOptions } from '../interfaces';\r\n\r\nexport const CardArea = styled.div<ITreeOptions>`\r\n  position: relative;\r\n  display: inline-block;\r\n  cursor: move;\r\n  z-index: 10;\r\n  ${(props) =>\r\n    props.horizontal &&\r\n    css`\r\n      display: table-cell;\r\n      vertical-align: middle;\r\n    `}\r\n`;\r\n\r\ninterface ICardCard {\r\n  isDragging: boolean;\r\n}\r\nexport const RenderLabel = styled.div<ICardCard>`\r\n  background-color: white;\r\n  cursor: grab;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0 15px;\r\n  min-width: 100px;\r\n  min-height: 45px;\r\n  z-index: 100000;\r\n  text-align: center;\r\n  color: black;\r\n  position: relative;\r\n  box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);\r\n  border-radius: 5px;\r\n\r\n  // no break line\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n\r\n  &.mock_card {\r\n    border: 1px solid #7de874;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.isDragging &&\r\n    css`\r\n      cursor: grabbing;\r\n    `}\r\n`;\r\n\r\nexport const RenderCustomCard = styled.div`\r\n  position: relative;\r\n  cursor: grab;\r\n\r\n  &.mock_card {\r\n    border: 1px solid #7de874;\r\n  }\r\n`;\r\n\r\nexport const StyledLabel = styled.div`\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n","import React, { createContext, useContext } from 'react';\r\n\r\nconst IndexContext = createContext({} as { index: number });\r\n\r\nexport function IndexContextProvider({\r\n  children,\r\n  index,\r\n}: {\r\n  children: React.ReactNode;\r\n  index: number;\r\n}): JSX.Element {\r\n  return (\r\n    <IndexContext.Provider value={{ index }}>{children}</IndexContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useIndex = () => useContext(IndexContext);\r\n","import clone from 'clone';\r\nimport React, {\r\n  createContext,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n  useImperativeHandle,\r\n} from 'react';\r\n\r\nimport {\r\n  IHierarchyContextProps,\r\n  IHierarchyTreesContext,\r\n  INestedObject,\r\n} from '../interfaces';\r\n\r\nconst HierarchyContext = createContext({} as IHierarchyTreesContext);\r\n\r\nexport function HierarchyTreesContextProvider({\r\n  children,\r\n  data,\r\n  treeDataRef,\r\n}: IHierarchyContextProps): JSX.Element {\r\n  const [treesData, setTreesData] = useState<INestedObject[]>(data);\r\n  const treesRef = useRef<INestedObject[]>(data);\r\n\r\n  useEffect(() => {\r\n    treesRef.current = treesData;\r\n  }, [treesData]);\r\n\r\n  const updateTree = useCallback((index: number, tree: INestedObject) => {\r\n    setTreesData((current) => current.map((t, i) => (i === index ? tree : t)));\r\n  }, []);\r\n\r\n  const addTree = useCallback((tree: INestedObject) => {\r\n    setTreesData((current) => [...current, tree]);\r\n  }, []);\r\n\r\n  const getTree = useCallback((index: number) => treesRef.current[index], []);\r\n\r\n  const editById = useCallback(\r\n    (\r\n      index: number,\r\n      id: number | string,\r\n      data: Partial<INestedObject>,\r\n      action: 'replace' | 'add' | 'remove' = 'add',\r\n      nestedObject?: INestedObject\r\n    ) => {\r\n      const targetTree = treesRef.current[index];\r\n      let nestedObjectClone = nestedObject\r\n        ? { ...nestedObject }\r\n        : { ...targetTree };\r\n      nestedObjectClone = clone(nestedObjectClone);\r\n\r\n      if (nestedObjectClone.id === id) {\r\n        if (!action || action === 'replace')\r\n          return { ...nestedObjectClone, ...data };\r\n        if (!action || action === 'add')\r\n          return {\r\n            ...nestedObjectClone,\r\n            ...data,\r\n            children: [\r\n              ...nestedObjectClone.children,\r\n              ...(data.children ? data.children : []),\r\n            ],\r\n          };\r\n        if (!action || action === 'remove')\r\n          return {\r\n            ...nestedObjectClone,\r\n            ...data,\r\n            children: [\r\n              ...nestedObjectClone.children.filter((child) =>\r\n                data.children\r\n                  ? !data.children.map((i) => i.id).includes(child.id)\r\n                  : child\r\n              ),\r\n            ],\r\n          };\r\n      }\r\n\r\n      if (!nestedObjectClone.children)\r\n        return nestedObjectClone as INestedObject;\r\n\r\n      const newChildren: INestedObject[] = nestedObjectClone.children.map(\r\n        (child) => {\r\n          return editById(index, id, data, action, child);\r\n        }\r\n      );\r\n\r\n      return {\r\n        ...nestedObjectClone,\r\n        children: newChildren || [],\r\n      } as INestedObject;\r\n    },\r\n    []\r\n  );\r\n\r\n  const addChildrenById = useCallback(\r\n    (\r\n      index: number,\r\n      id: number | string,\r\n      data: INestedObject[],\r\n      nestedObject?: INestedObject\r\n    ) => {\r\n      const targetTree = treesRef.current[index];\r\n      let nestedObjectClone = nestedObject\r\n        ? { ...nestedObject }\r\n        : { ...targetTree };\r\n      nestedObjectClone = clone(nestedObjectClone);\r\n\r\n      if (nestedObjectClone.id === id) {\r\n        return {\r\n          ...nestedObjectClone,\r\n          children: [...nestedObjectClone.children, ...(data ? data : [])],\r\n        };\r\n      }\r\n\r\n      if (!nestedObjectClone.children)\r\n        return nestedObjectClone as INestedObject;\r\n\r\n      const newChildren: INestedObject[] = nestedObjectClone.children.map(\r\n        (child) => {\r\n          return addChildrenById(index, id, data, child);\r\n        }\r\n      );\r\n\r\n      return {\r\n        ...nestedObjectClone,\r\n        children: newChildren || [],\r\n      } as INestedObject;\r\n    },\r\n    []\r\n  );\r\n\r\n  const removeById = useCallback(\r\n    (\r\n      index: number,\r\n      id: number | string,\r\n      dataToRemove: Array<number | string>,\r\n      nestedObject?: INestedObject\r\n    ) => {\r\n      const targetTree = treesRef.current[index];\r\n      let nestedObjectClone = nestedObject\r\n        ? { ...nestedObject }\r\n        : { ...targetTree };\r\n      nestedObjectClone = clone(nestedObjectClone);\r\n\r\n      if (nestedObjectClone.id === id) {\r\n        return {\r\n          ...nestedObjectClone,\r\n          ...dataToRemove,\r\n          children: [\r\n            ...nestedObjectClone.children.filter((child) =>\r\n              dataToRemove\r\n                ? !dataToRemove.map((i) => i).includes(child.id)\r\n                : !child\r\n            ),\r\n          ],\r\n        };\r\n      }\r\n\r\n      if (!nestedObjectClone.children)\r\n        return nestedObjectClone as INestedObject;\r\n\r\n      const newChildren: INestedObject[] = nestedObjectClone.children.map(\r\n        (child) => {\r\n          return removeById(index, id, dataToRemove, child);\r\n        }\r\n      );\r\n\r\n      return {\r\n        ...nestedObjectClone,\r\n        children: newChildren || [],\r\n      } as INestedObject;\r\n    },\r\n    []\r\n  );\r\n\r\n  const findParentByChildId = useCallback(\r\n    (index: number, id: number | string, nestsObject?: INestedObject) => {\r\n      const targetTree = treesRef.current[index];\r\n      let nestedObject = nestsObject ? { ...nestsObject } : { ...targetTree };\r\n      nestedObject = clone(nestedObject);\r\n\r\n      const loop = (\r\n        childObject: INestedObject,\r\n        parentObject: INestedObject | null,\r\n        arrayParentIdPaths = [] as Array<number | string>\r\n      ) => {\r\n        const array: Array<number | string> = [...arrayParentIdPaths];\r\n\r\n        if (parentObject?.id) array.push(parentObject.id);\r\n\r\n        if (childObject.id === id) {\r\n          return { parent: parentObject, path: array };\r\n        }\r\n\r\n        if (!childObject?.children) return { parent: null, path: [] };\r\n\r\n        let parent: {\r\n          parent: INestedObject | null;\r\n          path: Array<number | string>;\r\n        } = { parent: null, path: [] };\r\n\r\n        childObject.children.map((child) => {\r\n          const loopParent = loop(child, childObject, array);\r\n          if (loopParent.parent !== null) {\r\n            parent = loopParent;\r\n          }\r\n        });\r\n\r\n        return parent;\r\n      };\r\n\r\n      const parentData = loop(nestedObject, null);\r\n\r\n      return parentData;\r\n    },\r\n    []\r\n  );\r\n\r\n  const findById = useCallback((\r\n    // nestedObject: INestedObject,\r\n    index: number,\r\n    id: number | string,\r\n    nestsObject?: INestedObject\r\n  ) => {\r\n    const targetTree = treesRef.current[index];\r\n    let nestedObject = nestsObject ? { ...nestsObject } : { ...targetTree };\r\n    nestedObject = clone(nestedObject);\r\n\r\n    const loop = (nestedObject: INestedObject, itemId: number | string) => {\r\n      if (nestedObject.id === id) {\r\n        return nestedObject;\r\n      }\r\n      if (!nestedObject?.children) return null;\r\n\r\n      let item: INestedObject | null = null;\r\n\r\n      nestedObject.children.map((child) => {\r\n        const loopItem = loop(child, itemId);\r\n        if (loopItem !== null) item = loopItem;\r\n        return;\r\n      });\r\n\r\n      return item;\r\n    };\r\n\r\n    const Item = loop(nestedObject, id);\r\n\r\n    return Item;\r\n  }, []);\r\n\r\n  const isChild = useCallback(\r\n    (\r\n      index: number,\r\n      parentId: number | string,\r\n      childId: number | string,\r\n      nestedObject?: INestedObject\r\n    ) => {\r\n      const { path } = findParentByChildId(index, childId, nestedObject);\r\n      return path.includes(parentId);\r\n    },\r\n    []\r\n  );\r\n\r\n  const isParent = useCallback(\r\n    (\r\n      index: number,\r\n      parentId: number | string,\r\n      childId: number | string,\r\n      nestedObject?: INestedObject\r\n    ) => {\r\n      const parent = findById(index, parentId, nestedObject);\r\n      if (!parent) return false;\r\n      const children = getAllChildrenIds(parent);\r\n      if (children.includes(childId)) return true;\r\n      return false;\r\n    },\r\n    []\r\n  );\r\n\r\n  const isDirectChild = useCallback(\r\n    (\r\n      index: number,\r\n      parentId: number | string,\r\n      childId: number | string,\r\n      nestedObject?: INestedObject\r\n    ) => {\r\n      const { parent } = findParentByChildId(index, childId, nestedObject);\r\n      const id = parent?.id;\r\n      return id === parentId;\r\n    },\r\n    []\r\n  );\r\n\r\n  const getAllChildrenIds = useCallback((obj: INestedObject) => {\r\n    let childrenIds: (string | number)[] = [];\r\n\r\n    if (!obj.children.length) {\r\n      return childrenIds;\r\n    }\r\n\r\n    for (let child of obj.children) {\r\n      const childIds = getAllChildrenIds(child);\r\n      childrenIds = childrenIds.concat(childIds);\r\n    }\r\n\r\n    childrenIds = childrenIds.concat(obj.children.map((child) => child.id));\r\n\r\n    return childrenIds;\r\n  }, []);\r\n\r\n  useImperativeHandle(\r\n    treeDataRef,\r\n    () => ({\r\n      findById,\r\n      findParentByChildId,\r\n      removeById,\r\n      editById,\r\n      addChildrenById,\r\n      updateTree,\r\n      getTree,\r\n      getAllChildrenIds,\r\n      isDirectChild,\r\n      isParent,\r\n      isChild,\r\n      addTree,\r\n    }),\r\n    [\r\n      findById,\r\n      findParentByChildId,\r\n      removeById,\r\n      editById,\r\n      addChildrenById,\r\n      updateTree,\r\n      getTree,\r\n      getAllChildrenIds,\r\n      isDirectChild,\r\n      isParent,\r\n      isChild,\r\n      addTree,\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <HierarchyContext.Provider\r\n      value={{\r\n        treesData,\r\n        updateTree,\r\n        editById,\r\n        removeById,\r\n        findParentByChildId,\r\n        findById,\r\n        isDirectChild,\r\n        isChild,\r\n        isParent,\r\n        getTree,\r\n        addChildrenById,\r\n        addTree,\r\n      }}\r\n    >\r\n      {children}\r\n    </HierarchyContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useHierarchyData = () => useContext(HierarchyContext);\r\n","import React, { useEffect } from 'react';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\n\r\nimport { isLastNode } from '..';\r\nimport { useDebounce } from '../../hooks/useDebounce';\r\nimport { INestedObject } from '../../interfaces';\r\nimport { IRenderCard } from '../interfaces';\r\nimport { RenderBtn } from '../RenderBtn';\r\nimport { CardArea, RenderLabel, StyledLabel, RenderCustomCard } from './styles';\r\nimport { useIndex } from '../../context/IndexContextProvider';\r\nimport { useHierarchyData } from '../../context/HierarchyContextProvider';\r\n\r\nexport const RenderCard = ({\r\n  data,\r\n  setExpand,\r\n  expand,\r\n  mock,\r\n  root,\r\n  prop: { renderCard, ...prop },\r\n  hierarchyProps,\r\n}: IRenderCard) => {\r\n  const { hierarchyRef, draggingItemRef } = hierarchyProps;\r\n  const {\r\n    editById,\r\n    isDirectChild,\r\n    isParent,\r\n    findParentByChildId,\r\n    findById,\r\n    updateTree,\r\n  } = useHierarchyData();\r\n  const { index } = useIndex();\r\n\r\n  const node = prop.node;\r\n  const label = data[node.label];\r\n  const clx = ['org-tree-node-label-inner'];\r\n\r\n  if (mock) {\r\n    clx.push('mock_card');\r\n  }\r\n\r\n  const onAppendMock = (id: number | string, label: string) => {\r\n    // add renderNode if has already children inside\r\n    const componentChildren = document.getElementById(`children_${id}`);\r\n    if (componentChildren) {\r\n      const elementMockLabel = document.getElementById(`label_text_mock`);\r\n      const elementMockNode = document.getElementById(`node-tree-mock`);\r\n\r\n      if (!elementMockLabel) return;\r\n      if (!elementMockNode) return;\r\n\r\n      elementMockLabel.innerText = label;\r\n\r\n      elementMockNode.style.display = 'table-cell';\r\n      elementMockNode.id = `node-tree-mock-clone`;\r\n      const elementMockNodeClone = elementMockNode?.cloneNode(true);\r\n      elementMockNode.style.display = 'none';\r\n      elementMockNode.id = `node-tree-mock`;\r\n\r\n      const elementMockNodeLastChild = elementMockNodeClone.lastChild;\r\n      elementMockNodeLastChild &&\r\n        elementMockNodeClone.removeChild(elementMockNodeLastChild);\r\n\r\n      componentChildren.appendChild(elementMockNodeClone);\r\n      return;\r\n    }\r\n\r\n    // add renderChildrenNode if does not have children inside\r\n    const componentNode = document.getElementById(`node-tree-${id}`);\r\n    if (componentNode) {\r\n      const elementMockLabel = document.getElementById(`label_text_child_mock`);\r\n      const componentMockChildren = document.getElementById(`children_mock`);\r\n\r\n      if (!elementMockLabel) return;\r\n      if (!componentMockChildren) return;\r\n\r\n      elementMockLabel.innerText = label;\r\n\r\n      const oldMockId = componentMockChildren.id;\r\n      componentMockChildren.id = `node-tree-mock-clone`;\r\n      const componentMockChildrenClone = componentMockChildren?.cloneNode(true);\r\n      componentMockChildren.id = oldMockId;\r\n\r\n      componentNode.appendChild(componentMockChildrenClone);\r\n    }\r\n  };\r\n\r\n  const onRemoveMock = () => {\r\n    const componentCloneMock = document.getElementById(`node-tree-mock-clone`);\r\n    componentCloneMock && componentCloneMock.remove();\r\n  };\r\n\r\n  const [{ isDragging }, drag] = useDrag(\r\n    () => ({\r\n      type: 'box',\r\n      item: { ...data, treeIndex: index },\r\n      options: {\r\n        dropEffect: 'copy',\r\n      },\r\n      canDrag: () => !root,\r\n      collect: (monitor) => ({\r\n        isDragging: !!monitor.isDragging(),\r\n      }),\r\n    }),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    const labelDoc = document.getElementById(`node-tree-${data.id}`);\r\n    if (!labelDoc) return;\r\n\r\n    // labelDoc.style.opacity = isDragging ? '0.5' : '1';\r\n\r\n    const LabelClassName = labelDoc.className;\r\n\r\n    labelDoc.className = isDragging\r\n      ? labelDoc.className + ' RdtCant-drop'\r\n      : LabelClassName.replace(' RdtCant-drop', '');\r\n\r\n    draggingItemRef.current = data;\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isDragging]);\r\n\r\n  const onDragEnter = (dropId: string | number) => {\r\n    let dragLabel = 'Place here';\r\n    if (draggingItemRef.current) {\r\n      const {\r\n        id: dragItemId,\r\n        treeIndex: dragItemIndex,\r\n      } = draggingItemRef.current;\r\n      const canDrop =\r\n        index !== dragItemIndex ||\r\n        (dragItemId !== data.id &&\r\n          !isDirectChild(index, data.id, dragItemId, hierarchyRef.current) &&\r\n          !isParent(index, dragItemId, data.id, hierarchyRef.current));\r\n      dragLabel = draggingItemRef.current.label;\r\n      if (!canDrop) return;\r\n    }\r\n    onAppendMock(dropId, dragLabel);\r\n  };\r\n\r\n  const onDragLeave = () => {\r\n    onRemoveMock();\r\n  };\r\n\r\n  const onDrop = (drag: INestedObject) => {\r\n    const dragIndex = drag.treeIndex;\r\n\r\n    const dragItem = findById(dragIndex, drag.id);\r\n    const dropItem = data;\r\n\r\n    const isSameTree = dragIndex === index;\r\n\r\n    const result = findParentByChildId(dragIndex, drag.id);\r\n    const { parent: parentDragItem } = result;\r\n\r\n    if (parentDragItem && dragItem) {\r\n      const newParent = {\r\n        ...parentDragItem,\r\n        children: [...parentDragItem.children.filter((i) => i.id !== drag.id)],\r\n      };\r\n\r\n      const removedDragItemHierarchy = editById(\r\n        dragIndex,\r\n        parentDragItem.id,\r\n        newParent,\r\n        'replace'\r\n      );\r\n\r\n      const addedDragItemHierarchy = editById(\r\n        index,\r\n        dropItem.id,\r\n        {\r\n          children: [dragItem],\r\n        },\r\n        'add',\r\n        isSameTree ? removedDragItemHierarchy : undefined\r\n      );\r\n\r\n      if (!isSameTree) updateTree(dragIndex, removedDragItemHierarchy);\r\n\r\n      updateTree(index, addedDragItemHierarchy);\r\n\r\n      const oldRelationship = { parent: parentDragItem.id, child: dragItem.id };\r\n      const newRelationship = { parent: dropItem.id, child: dragItem.id };\r\n      prop.onChange &&\r\n        prop.onChange(addedDragItemHierarchy, {\r\n          oldRelationship,\r\n          newRelationship,\r\n        });\r\n    }\r\n  };\r\n\r\n  const { onDebounce } = useDebounce(onDragEnter, 300);\r\n\r\n  const [{ isOver, canDrop }, drop] = useDrop(\r\n    () => ({\r\n      accept: 'box',\r\n      canDrop: (item: INestedObject) =>\r\n        index !== item.treeIndex ||\r\n        (data.id !== item.id &&\r\n          !isDirectChild(index, data.id, item.id, hierarchyRef.current) &&\r\n          !isParent(index, item.id, data.id, hierarchyRef.current)),\r\n      drop: (drag: INestedObject) => onDrop(drag),\r\n      collect: (monitor) => ({\r\n        isOver: !!monitor.isOver(),\r\n        canDrop: monitor.canDrop(),\r\n      }),\r\n    }),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isOver) onDebounce(data.id);\r\n    else onDragLeave();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isOver]);\r\n\r\n  return (\r\n    <CardArea\r\n      id={`label_${data.id}`}\r\n      key={`label_${data.id}`}\r\n      horizontal={!!prop.horizontal}\r\n      className={'org-tree-node-label'}\r\n      ref={drop}\r\n      onClick={(e) =>\r\n        typeof prop.onClick === 'function' && prop.onClick(e, data)\r\n      }\r\n    >\r\n      {renderCard ? (\r\n        <RenderCustomCard key={`label_inner_${data.id}`} ref={drag}>\r\n          {renderCard({\r\n            isDragging,\r\n            label,\r\n            labelId: `label_text_${data.id}`,\r\n            data,\r\n            isPreviewCard: !!mock,\r\n            isOver,\r\n            canDrop,\r\n            treeIndex: index,\r\n          })}\r\n          {prop.collapsable && !isLastNode(data, prop) && (\r\n            <RenderBtn\r\n              setExpand={setExpand}\r\n              expand={expand}\r\n              data={data}\r\n              prop={prop}\r\n            />\r\n          )}\r\n        </RenderCustomCard>\r\n      ) : (\r\n        <RenderLabel\r\n          key={`label_inner_${data.id}`}\r\n          ref={drag}\r\n          isDragging={isDragging}\r\n          className={clx.join(' ')}\r\n          style={{ ...prop.cardStyle, ...data.style }}\r\n        >\r\n          <StyledLabel id={`label_text_${data.id}`}>{label}</StyledLabel>\r\n          {prop.collapsable && !isLastNode(data, prop) && (\r\n            <RenderBtn\r\n              setExpand={setExpand}\r\n              expand={expand}\r\n              data={data}\r\n              prop={prop}\r\n            />\r\n          )}\r\n        </RenderLabel>\r\n      )}\r\n    </CardArea>\r\n  );\r\n};\r\n","import { useEffect, useRef } from \"react\";\r\n\r\ninterface IDebounce {\r\n  onDebounce: (...args: any[]) => void;\r\n  onClearDebounce: () => void;\r\n}\r\n\r\nexport const useDebounce = (\r\n  fn: (...args: any[]) => void,\r\n  delay: number,\r\n  continueUnmounted?: boolean // if want to continue to update after unmounted\r\n): IDebounce => {\r\n  const ref = useRef<number | undefined | null>(null);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (ref.current && !continueUnmounted) window.clearTimeout(ref.current);\r\n    };\r\n  });\r\n\r\n  async function onDebounce(...args: any[]): Promise<void> {\r\n    if (ref.current) {\r\n      await window.clearTimeout(ref.current);\r\n    }\r\n\r\n    const timeout = await window.setTimeout(() => {\r\n      fn(...args);\r\n    }, delay);\r\n    ref.current = timeout;\r\n  }\r\n\r\n  function onClearDebounce(): void {\r\n    if (ref.current) window.clearTimeout(ref.current);\r\n  }\r\n\r\n  return { onDebounce, onClearDebounce };\r\n};\r\n","import { css } from '@emotion/react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { ITreeOptions } from '../interfaces';\r\n\r\nexport const OrgTreeNode = styled.div<ITreeOptions>`\r\n  position: relative;\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style-type: none;\r\n  padding-left: 20px;\r\n\r\n  &:before,\r\n  &:after {\r\n    transition: all 0.35s;\r\n  }\r\n\r\n  padding-top: 20px;\r\n  display: table-cell;\r\n  vertical-align: top;\r\n\r\n  &.is-leaf,\r\n  &.collapsed {\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n  }\r\n\r\n  &:before,\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 50%;\r\n    height: 19px;\r\n  }\r\n\r\n  &:after {\r\n    left: 50%;\r\n    border-left: 1px solid\r\n      ${(prop) => (prop.strokeColor ? prop.strokeColor : '#000')};\r\n  }\r\n\r\n  &:not(:first-of-type):before,\r\n  &:not(:last-of-type):after {\r\n    border-top: 1px solid\r\n      ${(prop) => (prop.strokeColor ? prop.strokeColor : '#000')};\r\n  }\r\n\r\n  // remove the line of the first label\r\n  &.org-tree-node-first {\r\n    padding-top: 0;\r\n\r\n    &:before,\r\n    &:after {\r\n      border-left: none;\r\n      opacity: 0;\r\n    }\r\n  }\r\n\r\n  ${(props) =>\r\n    props.reverse &&\r\n    css`\r\n      display: inline-flex;\r\n      flex-direction: column-reverse;\r\n      align-items: center;\r\n      padding-top: 0px;\r\n      padding-bottom: 20px;\r\n\r\n      &:before,\r\n      &:after {\r\n        top: unset;\r\n        bottom: 0;\r\n      }\r\n\r\n      &:not(:first-of-type):before,\r\n      &:not(:last-of-type):after {\r\n        border-top: none;\r\n        border-bottom: 1px solid\r\n          ${props.strokeColor ? props.strokeColor : '#000'};\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.horizontal &&\r\n    css`\r\n      display: table-cell;\r\n      float: none;\r\n      padding-top: 0;\r\n      padding-left: 20px;\r\n\r\n      &.is-leaf,\r\n      &.collapsed {\r\n        padding-top: 10px;\r\n        padding-bottom: 10px;\r\n      }\r\n\r\n      &:before,\r\n      &:after {\r\n        width: 19px;\r\n        height: 50%;\r\n      }\r\n\r\n      &:after {\r\n        top: 50%;\r\n        left: 0;\r\n        border-left: 0;\r\n      }\r\n\r\n      &:only-child:before {\r\n        top: 1px;\r\n        border-bottom: 1px solid\r\n          ${props.strokeColor ? props.strokeColor : '#000'};\r\n      }\r\n\r\n      &:not(:first-of-type):before,\r\n      &:not(:last-of-type):after {\r\n        border-top: 0;\r\n        border-left: 1px solid ${props.strokeColor ? props.strokeColor : '#000'};\r\n      }\r\n\r\n      &:not(:only-child):after {\r\n        border-top: 1px solid ${props.strokeColor ? props.strokeColor : '#000'};\r\n      }\r\n\r\n      // remove the line of the first label\r\n      &.org-tree-node-first {\r\n        padding-left: 0;\r\n\r\n        &:after {\r\n          border-left: none;\r\n          opacity: 0;\r\n        }\r\n      }\r\n    `}\r\n\r\n  .RdtCant-drop {\r\n    opacity: 0.5;\r\n    cursor: no-drop;\r\n    .org-tree-node-label-inner {\r\n      background-color: #aaaaaa33;\r\n    }\r\n    .org-tree-node-label-inner-personal {\r\n      opacity: 0.5;\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { isLastNode } from '..';\r\nimport { IRender } from '../interfaces';\r\nimport { RenderChildren } from '../RenderChildren';\r\nimport { RenderCard } from '../RenderCard';\r\nimport { OrgTreeNode } from './styles';\r\n\r\nexport const RenderNode = ({\r\n  data,\r\n  prop,\r\n  first,\r\n  mock,\r\n  hierarchyProps,\r\n}: IRender) => {\r\n  const node = prop.node;\r\n  const cls = ['org-tree-node'];\r\n\r\n  const [expand, setExpand] = useState(\r\n    !(node.expand in data && !data[node.expand])\r\n  );\r\n\r\n  useEffect(() => {\r\n    setExpand(prop.expandAll);\r\n  }, [prop.expandAll]);\r\n\r\n  if (isLastNode(data, prop)) {\r\n    cls.push('is-leaf');\r\n  } else if (prop.collapsable && !expand) {\r\n    cls.push('collapsed');\r\n  }\r\n\r\n  if (first) cls.push('org-tree-node-first');\r\n\r\n  return (\r\n    <OrgTreeNode\r\n      id={`node-tree-${data.id}`}\r\n      horizontal={prop.horizontal}\r\n      reverse={prop.reverse}\r\n      className={cls.join(' ')}\r\n      strokeColor={prop.strokeColor}\r\n      strokeWidth={prop.strokeWidth}\r\n      style={data.id === 'mock' ? { display: 'none' } : {}}\r\n    >\r\n      <RenderCard\r\n        hierarchyProps={hierarchyProps}\r\n        setExpand={setExpand}\r\n        expand={expand}\r\n        data={data}\r\n        prop={prop}\r\n        mock={mock}\r\n        root={first}\r\n      />\r\n      {(!prop.collapsable || expand) && (\r\n        <RenderChildren\r\n          data={data}\r\n          list={data.children}\r\n          prop={prop}\r\n          mock={mock}\r\n          hierarchyProps={hierarchyProps}\r\n        />\r\n      )}\r\n    </OrgTreeNode>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { IOrgTreeNodeProps } from '../interfaces';\r\nimport { RenderNode } from './RenderNode';\r\nimport { useHierarchy } from '../hooks/useHierarchy';\r\nimport { useIndex } from '../context/IndexContextProvider';\r\n\r\nexport const isLastNode = (data: any, prop: IOrgTreeNodeProps) => {\r\n  const node = prop.node;\r\n  return !(\r\n    Array.isArray(data[node.children]) && data[node.children].length > 0\r\n  );\r\n};\r\n\r\nconst mock_data = {\r\n  id: 'mock',\r\n  label: 'Label',\r\n  children: [{ id: 'child_mock', label: 'Label', children: [] }],\r\n};\r\n\r\nexport const TreeNode = (props: IOrgTreeNodeProps) => {\r\n  const { index } = useIndex();\r\n  const { hierarchy, ...hierarchyProps } = useHierarchy({ index });\r\n\r\n  return (\r\n    <>\r\n      <RenderNode\r\n        data={hierarchy}\r\n        hierarchyProps={hierarchyProps}\r\n        prop={props}\r\n        first\r\n      />\r\n      <RenderNode\r\n        hierarchyProps={hierarchyProps}\r\n        data={mock_data}\r\n        prop={props}\r\n        mock\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useRef, useState, useMemo } from 'react';\r\n\r\nimport { IHierarchyProps, INestedObject } from '../interfaces';\r\nimport { useHierarchyData } from '../context/HierarchyContextProvider';\r\n\r\nexport const useHierarchy = ({ index }: IHierarchyProps) => {\r\n  const { treesData } = useHierarchyData();\r\n  const [hierarchy, setHierarchy] = useState<INestedObject>(treesData[index]);\r\n  const hierarchyRef = useRef<INestedObject>(hierarchy);\r\n  const draggingItemRef = useRef<INestedObject>(null);\r\n\r\n  useEffect(() => {\r\n    const newData = treesData[index];\r\n    setHierarchy(newData);\r\n    hierarchyRef.current = newData;\r\n  }, [treesData]);\r\n\r\n  return useMemo(() => {\r\n    return {\r\n      draggingItemRef,\r\n      hierarchyRef,\r\n      hierarchy,\r\n      setHierarchy,\r\n    };\r\n  }, [draggingItemRef, hierarchyRef, hierarchy, setHierarchy]);\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\ninterface IHorizontal {\r\n  horizontal: boolean;\r\n}\r\nexport const OrgTreeContainer = styled.div<IHorizontal>`\r\n  display: block;\r\n  padding: 15px;\r\n`;\r\n\r\nexport const OrgTree = styled.div<IHorizontal>`\r\n  display: table;\r\n  text-align: center;\r\n\r\n  &:before,\r\n  &:after {\r\n    content: '';\r\n    display: table;\r\n  }\r\n\r\n  &:after {\r\n    clear: both;\r\n  }\r\n`;\r\n","import React, { useCallback, useState } from 'react';\r\n\r\nimport { TreeNode } from '..';\r\nimport { INodeTree, IOrgTreeProps } from '../../interfaces';\r\nimport { OrgTree, OrgTreeContainer } from './OrgTree.styles';\r\n\r\nconst initialState = {\r\n  node: {\r\n    label: 'label',\r\n    expand: 'expand',\r\n    children: 'children',\r\n  },\r\n};\r\n\r\nexport const OrgTreeComponent = ({\r\n  data,\r\n  onClick,\r\n  collapsable = true,\r\n  expandAll = true,\r\n  horizontal = false,\r\n  reverse = false,\r\n  ...props\r\n}: IOrgTreeProps) => {\r\n  const [expandAllNodes, setExpandAllNodes] = useState<boolean>(expandAll);\r\n  const node = initialState.node as INodeTree;\r\n\r\n  const onExpandNodes = useCallback(() => {\r\n    const labelDoc = document.getElementById(`children_${data.id}`);\r\n    if (labelDoc) setExpandAllNodes((expandAllNodes) => !expandAllNodes);\r\n    else setExpandAllNodes(true);\r\n  }, [data.id]);\r\n\r\n  console.log(reverse);\r\n\r\n  return (\r\n    <OrgTreeContainer horizontal={horizontal}>\r\n      <OrgTree horizontal={horizontal}>\r\n        <TreeNode\r\n          data={data}\r\n          horizontal={horizontal}\r\n          node={node}\r\n          reverse={reverse}\r\n          onExpandNodes={onExpandNodes}\r\n          collapsable={collapsable}\r\n          expandAll={expandAllNodes}\r\n          onClick={(e, nodeData) => onClick && onClick(e, nodeData)}\r\n          {...props}\r\n        />\r\n      </OrgTree>\r\n    </OrgTreeContainer>\r\n  );\r\n};\r\n","import React, { forwardRef } from 'react';\r\nimport { DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport { IRenderTrees } from '../interfaces';\r\nimport { OrgTreeComponent } from './OrgTree/OrgTree';\r\nimport { HierarchyTreesContextProvider } from '../context/HierarchyContextProvider';\r\nimport { IndexContextProvider } from '../context/IndexContextProvider';\r\n\r\nexport const RenderTrees = forwardRef<any, IRenderTrees>(\r\n  (\r\n    {\r\n      data,\r\n      onClick,\r\n      collapsable = true,\r\n      expandAll = true,\r\n      horizontal = false,\r\n      reverse = false,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    if (horizontal && reverse)\r\n      throw new Error(\r\n        'The horizontal and reverse properties cannot be used at the same time'\r\n      );\r\n    return (\r\n      <DndProvider backend={HTML5Backend}>\r\n        <HierarchyTreesContextProvider data={data} treeDataRef={ref}>\r\n          {data.map((tree, i) => (\r\n            <IndexContextProvider key={i} index={i}>\r\n              <OrgTreeComponent\r\n                data={tree}\r\n                collapsable={collapsable}\r\n                expandAll={expandAll}\r\n                horizontal={horizontal}\r\n                reverse={reverse}\r\n                {...props}\r\n              />\r\n            </IndexContextProvider>\r\n          ))}\r\n        </HierarchyTreesContextProvider>\r\n      </DndProvider>\r\n    );\r\n  }\r\n);\r\n","import { RefObject, useRef } from \"react\";\r\n\r\nimport { ITreeRefProps } from \"../interfaces\";\r\n\r\n// interface ITreeProps extends ITreeRefProps {\r\ninterface ITreeProps {\r\n  treeRef: RefObject<ITreeRefProps>;\r\n}\r\n\r\nexport const useTree = (): ITreeProps => {\r\n  const treeRef = useRef<ITreeRefProps>(null);\r\n\r\n  return {\r\n    treeRef,\r\n  };\r\n};\r\n"],"names":["ChildrenComponent","styled","div","prop","strokeWidth","strokeColor","props","reverse","css","horizontal","RenderChildren","list","data","mock","hierarchyProps","Array","isArray","length","React","id","className","map","item","RenderNode","key","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","RenderButton","span","buttonBackgroundColor","buttonBorderColor","expanded","ContainerButton","RenderBtn","setExpand","expand","renderButton","isCollapsed","onClick","event","stopPropagation","e","CardArea","RenderLabel","isDragging","RenderCustomCard","StyledLabel","IndexContext","createContext","IndexContextProvider","Provider","index","children","useIndex","useContext","HierarchyContext","HierarchyTreesContextProvider","treeDataRef","useState","treesData","setTreesData","treesRef","useRef","useEffect","current","updateTree","useCallback","tree","t","addTree","getTree","editById","action","nestedObject","nestedObjectClone","clone","filter","child","includes","newChildren","addChildrenById","removeById","dataToRemove","findParentByChildId","nestsObject","loop","childObject","parentObject","arrayParentIdPaths","array","parent","path","loopParent","findById","itemId","loopItem","isChild","parentId","childId","isParent","getAllChildrenIds","isDirectChild","childrenIds","childIds","concat","useImperativeHandle","useHierarchyData","RenderCard","root","renderCard","hierarchyRef","draggingItemRef","label","node","clx","useDrag","treeIndex","options","dropEffect","canDrag","collect","monitor","drag","labelDoc","document","getElementById","replace","onDebounce","delay","continueUnmounted","ref","args","window","clearTimeout","setTimeout","onClearDebounce","useDebounce","dropId","dragLabel","dragItemId","canDrop","componentChildren","elementMockLabel","elementMockNode","innerText","style","display","elementMockNodeClone","cloneNode","elementMockNodeLastChild","lastChild","removeChild","appendChild","componentNode","componentMockChildren","oldMockId","componentMockChildrenClone","onAppendMock","useDrop","accept","drop","dragIndex","dragItem","dropItem","isSameTree","parentDragItem","newParent","removedDragItemHierarchy","addedDragItemHierarchy","onChange","oldRelationship","newRelationship","onDrop","isOver","componentCloneMock","remove","labelId","isPreviewCard","collapsable","isLastNode","join","cardStyle","OrgTreeNode","first","cls","expandAll","mock_data","TreeNode","hierarchy","setHierarchy","newData","useMemo","useHierarchy","OrgTreeContainer","OrgTree","initialState","OrgTreeComponent","expandAllNodes","setExpandAllNodes","onExpandNodes","console","log","nodeData","forwardRef","DndProvider","backend","HTML5Backend","treeRef"],"mappings":"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"}